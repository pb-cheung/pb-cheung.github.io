(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{350:function(t,a,e){t.exports=e.p+"assets/img/http-cache.03707252.png"},407:function(t,a,e){t.exports=e.p+"assets/img/HTTP-STATUS.64d1ee09.png"},408:function(t,a,e){t.exports=e.p+"assets/img/https-connect.ea2360fb.png"},409:function(t,a,e){t.exports=e.p+"assets/img/force-cache.1d6a4a36.png"},410:function(t,a,e){t.exports=e.p+"assets/img/http-304.bec60290.png"},411:function(t,a,e){t.exports=e.p+"assets/img/last-modified.ad52a4b7.png"},412:function(t,a,e){t.exports=e.p+"assets/img/etag.0b871e43.png"},413:function(t,a,e){t.exports=e.p+"assets/img/cache-control-process.d3ee33ed.png"},414:function(t,a,e){t.exports=e.p+"assets/img/http2-example.3516b965.png"},415:function(t,a,e){t.exports=e.p+"assets/img/http3-example.c23a4ab8.png"},524:function(t,a,e){"use strict";e.r(a);var s=e(56),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),s("h2",{attrs:{id:"响应状态码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应状态码"}},[t._v("#")]),t._v(" 响应状态码")]),t._v(" "),s("ul",[s("li",[t._v("1xx，Informational（信息性状态码），请求正在被处理")]),t._v(" "),s("li",[t._v("2xx，Success（成功状态码），请求处理成功")]),t._v(" "),s("li",[t._v("3xx，Redirection（重定向状态码），需要进行重定向")]),t._v(" "),s("li",[t._v("4xx，Client Error（客户端状态码），服务器无法处理请求")]),t._v(" "),s("li",[t._v("5xx，Server Error（服务端状态码），服务器处理请求时报错")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(407),alt:"HTTP 状态码"}})]),t._v(" "),s("h3",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考：")]),t._v(" "),s("p",[t._v("https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status\nhttps://www.cnblogs.com/harlanzhang/p/6196370.html")]),t._v(" "),s("h2",{attrs:{id:"https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),s("h3",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),s("p",[t._v("Hyper Text Transfer Protocol Secure，超文本传输安全协议。")]),t._v(" "),s("p",[t._v("简称有：HTTP over TLS、HTTP over SSL、HTTP Secure。")]),t._v(" "),s("p",[t._v("在HTTP上建立SSL加密层，并对传输数据进行加密。")]),t._v(" "),s("h3",{attrs:{id:"主要作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主要作用"}},[t._v("#")]),t._v(" 主要作用：")]),t._v(" "),s("ol",[s("li",[t._v("对数据进行加密，并建立一个安全的信道，保证传输过程中的数据安全。")]),t._v(" "),s("li",[t._v("对网站服务器进行身份认证。")])]),t._v(" "),s("h3",{attrs:{id:"连接建立过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接建立过程"}},[t._v("#")]),t._v(" 连接建立过程")]),t._v(" "),s("p",[s("img",{attrs:{src:e(408),alt:"https连接建立过程"}})]),t._v(" "),s("ol",[s("li",[t._v("客户端发起连接请求：客户端通过向服务器发送连接请求来启动HTTPS连接。这是一个普通的HTTP请求，但是客户端会在请求中声明支持HTTPS。")]),t._v(" "),s("li",[t._v("服务器发送证书：服务器接收到客户端的连接请求后，会将其数字证书发送给客户端。证书通常由受信任的第三方机构（证书颁发机构，Certificate Authority，CA）签发，用于验证服务器的身份。")]),t._v(" "),s("li",[t._v("客户端验证证书：客户端在接收到服务器发送的证书后，会对证书进行验证。验证的过程包括检查证书的有效性、颁发机构的可信度以及证书中包含的服务器域名是否与客户端请求的域名匹配。")]),t._v(" "),s("li",[t._v("客户端生成对称密钥：如果证书验证成功，客户端会生成一个用于对称加密的密钥。对称加密使用相同的密钥来进行加密和解密，因此客户端和服务器需要共享相同的密钥。")]),t._v(" "),s("li",[t._v("客户端使用服务器的公钥加密密钥：客户端使用服务器"),s("strong",[t._v("证书中包含的公钥")]),t._v("对生成的对称密钥进行加密，并将加密后的密钥发送给服务器。")]),t._v(" "),s("li",[t._v("服务器使用私钥解密密钥：服务器使用自己持有的私钥对接收到的加密密钥进行解密，恢复出对称密钥。")]),t._v(" "),s("li",[t._v("客户端和服务器进行加密通信：现在，客户端和服务器都拥有相同的对称密钥，可以使用该密钥进行加密和解密通信内容。客户端和服务器之间的所有数据传输都会使用对称密钥进行加密，以确保数据的机密性和完整性。")])]),t._v(" "),s("h3",{attrs:{id:"ca认证证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ca认证证书"}},[t._v("#")]),t._v(" CA认证证书")]),t._v(" "),s("p",[t._v("如果不存在的权威认证机构来颁发证书和提供认证校验服务，HTTPS存在中间人攻击的风险。")]),t._v(" "),s("p",[t._v("（本地请求被劫持（如DNS劫持等），所有请求均发送到中间人的服务器，中间人服务器返回自己颁发的证书。）")]),t._v(" "),s("h3",{attrs:{id:"抓包调试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抓包调试"}},[t._v("#")]),t._v(" 抓包调试")]),t._v(" "),s("p",[t._v("HTTPS是加密的，常规情况，代理工具抓包也不能查看信息内容。")]),t._v(" "),s("h4",{attrs:{id:"中间人攻击-代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中间人攻击-代理"}},[t._v("#")]),t._v(" 中间人攻击（代理）")]),t._v(" "),s("p",[t._v("抓包内容无法查看明文的解决方法：")]),t._v(" "),s("p",[t._v('客户端（被调试的PC、手机浏览器）是我们自己的终端，我们可以授权组建"中间人网络"，代理抓包工具就是"中间人"。')]),t._v(" "),s("p",[t._v("具体操作是：")]),t._v(" "),s("ol",[s("li",[t._v("抓包代理工具生成导出一个证书")]),t._v(" "),s("li",[t._v("我们的客户端安装并信任这个证书（包含公钥）")]),t._v(" "),s("li",[t._v("客户端使用这个证书建立安全连接后发送加密请求")]),t._v(" "),s("li",[t._v("中间人解密请求，再加密转发（HTTPS）内容到客户端请求的目的服务器")]),t._v(" "),s("li",[t._v("中间人接收服务器返回的数据，解密后加密再转发给客户端")])]),t._v(" "),s("h3",{attrs:{id:"参考-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考-2"}},[t._v("#")]),t._v(" 参考：")]),t._v(" "),s("p",[t._v("https://juejin.cn/post/6844903604868874247")]),t._v(" "),s("h2",{attrs:{id:"缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),s("p",[t._v("网络请求相比于CPU的计算和页面的渲染耗时更长。")]),t._v(" "),s("p",[t._v("缓存哪些资源：js、css、img等静态资源。")]),t._v(" "),s("h3",{attrs:{id:"强制缓存-force-cache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强制缓存-force-cache"}},[t._v("#")]),t._v(" 强制缓存（force cache）")]),t._v(" "),s("p",[s("img",{attrs:{src:e(409),alt:"强制缓存"}})]),t._v(" "),s("p",[t._v("返回包header中的"),s("code",[t._v("Cache-Control")]),t._v("，取值：")]),t._v(" "),s("ul",[s("li",[t._v("max-age，最大有效时间")]),t._v(" "),s("li",[t._v("no-cache，可以在客户端缓存，但是每次都必须去服务端做新鲜度检验，\n来决定从服务端获取新的资源（200）还是使用缓存（304）")]),t._v(" "),s("li",[t._v("no-store，不要在客户端缓存")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(410),alt:"HTTP-304"}})]),t._v(" "),s("h3",{attrs:{id:"协商缓存-negotiate-cache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存-negotiate-cache"}},[t._v("#")]),t._v(" 协商缓存（negotiate cache）")]),t._v(" "),s("p",[t._v("分为两种：使用"),s("code",[t._v("Last-Modified")]),t._v("和使用"),s("code",[t._v("ETag")])]),t._v(" "),s("h4",{attrs:{id:"last-modified"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#last-modified"}},[t._v("#")]),t._v(" Last-Modified")]),t._v(" "),s("p",[s("img",{attrs:{src:e(411),alt:"last-modified"}})]),t._v(" "),s("ol",[s("li",[t._v("初次请求，服务端回包header中带有"),s("code",[t._v("Last-Modified")]),t._v("，"),s("strong",[t._v("文件最后修改时间")])]),t._v(" "),s("li",[t._v("再次请求，请求包header中带有"),s("code",[t._v("if-Modified-Since")]),t._v("，")]),t._v(" "),s("li",[t._v("服务端收到"),s("code",[t._v("if-Modified-Since")]),t._v("和服务端资源修改时间做对比，一致返回304，不一致返回200和新的资源及"),s("code",[t._v("Last-Modified")]),t._v("。")])]),t._v(" "),s("h4",{attrs:{id:"etag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#etag"}},[t._v("#")]),t._v(" Etag")]),t._v(" "),s("p",[s("img",{attrs:{src:e(412),alt:"Etag"}})]),t._v(" "),s("p",[t._v("Etag出现的背景，使用时间会有同步等问题：")]),t._v(" "),s("blockquote",[s("p",[t._v("服务器可以从操作系统的文件系统中获取修改时间，这对于提供静态文件的情况来说是比较容易做到的。但是，也存在一些问题；例如，时间格式复杂且难以解析，分布式服务器难以同步文件更新时间。")])]),t._v(" "),s("ol",[s("li",[t._v("初次请求，服务端回包header中带有"),s("code",[t._v("Etag")]),t._v("，"),s("strong",[t._v("文件唯一标识")])]),t._v(" "),s("li",[t._v("再次请求，请求包header中带有"),s("code",[t._v("if-None-Match")]),t._v("，取值和Etag相同，")]),t._v(" "),s("li",[t._v("服务端收到"),s("code",[t._v("if-None-Match")]),t._v("和服务端资源文件标识做对比，一致返回304，不一致返回200和新的资源及Etag。")])]),t._v(" "),s("h3",{attrs:{id:"两种缓存方式对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两种缓存方式对比"}},[t._v("#")]),t._v(" 两种缓存方式对比")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Last-Modified")]),t._v("只能精确到秒级")]),t._v(" "),s("li",[t._v("如果资源被重复生成，而内容不变，则Etag更精确")]),t._v(" "),s("li",[t._v("优先使用"),s("code",[t._v("Etag")])])]),t._v(" "),s("p",[s("img",{attrs:{src:e(350),alt:"http-cache"}})]),t._v(" "),s("p",[t._v("Cache-Control流程图:")]),t._v(" "),s("p",[s("img",{attrs:{src:e(413),alt:"Cache-Control流程图"}})]),t._v(" "),s("h4",{attrs:{id:"参考-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考-3"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[t._v("https://juejin.cn/post/7061588533214969892#heading-54")]),t._v(" "),s("h2",{attrs:{id:"http2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http2"}},[t._v("#")]),t._v(" HTTP2")]),t._v(" "),s("h3",{attrs:{id:"http1-1的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http1-1的问题"}},[t._v("#")]),t._v(" http1.1的问题")]),t._v(" "),s("ul",[s("li",[t._v("线头阻塞。TCP连接上只能发送一个请求，前面的请求完成前，后面的都在排队。")]),t._v(" "),s("li",[t._v("头部冗余，采用文本格式。头部文本格式且未压缩，而且每一个请求都会带上cookie、user-agent等完全相同的首部。")]),t._v(" "),s("li",[t._v("客户端需要主动请求")])]),t._v(" "),s("h3",{attrs:{id:"http2-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http2-2"}},[t._v("#")]),t._v(" HTTP2")]),t._v(" "),s("ul",[s("li",[t._v("二进制协议。二进制传输内容，而不是文本。（也是为多付复用服务？）")]),t._v(" "),s("li",[t._v("多路复用。HTTP2建立一个TCP连接，一个连接上面可以有任意多个流（stream），消息分割到一个或多个帧（frame）在流里面传输。\n帧传输过去以后，再进行重组，形成一个完整的请求或响应。这使得所有的请求或响应都无法阻塞。一个请求/响应对应一个流")]),t._v(" "),s("li",[t._v("头部压缩。HTTP2为此采用HPACK压缩格式来压缩首部。头部压缩需要在浏览器和服务器端之间维护相同的静态字典。")]),t._v(" "),s("li",[t._v("服务器端推送。针对每一个希望发送的资源，服务器会发送一个PUSH_PROMISE帧，客户端可以通过发送RST_STREAM帧来拒绝推送（当资源已经位于缓存）。\n这一步的操作先于父响应（index.html），客户端了解到服务器端打算推送哪些资源，就不会再为这些资源创建重复请求。当客户端收到index.html的响应时，script.js和style.css已经位于缓存。")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(414),alt:""}})]),t._v(" "),s("p",[s("a",{attrs:{href:"https://metaatem.cn/javascript/deep/HTTP2.0%E8%BF%98%E9%9C%80%E8%A6%81%E5%81%9A%E8%AF%B7%E6%B1%82%E5%90%88%E5%B9%B6%E5%90%97.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP2.0还需要做请求合并吗"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"http3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http3"}},[t._v("#")]),t._v(" HTTP3")]),t._v(" "),s("p",[t._v("HTTP2解决了HTTP的队头阻塞，没有解决TCP的队头阻塞问题")]),t._v(" "),s("p",[t._v("流id（stream id）以前在 HTTP/2 的数据帧（DATA frame）中，现在被下移到传输层的 QUIC 流帧（STREAM frame）中")]),t._v(" "),s("p",[s("img",{attrs:{src:e(415),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"参考-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考-4"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Caching",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP缓存|MDN"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/330300133",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于对头阻塞，看着一篇就够了"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);